- name: Deploy nextcloud
  hosts: all
  user: root

  vars:
    hostname: nextcloud.example.com
    project_root: /srv/docker/containers/nextcloud
    git_base: https://raw.githubusercontent.com/majes-git/docker/master/nextcloud-wireguard/nextcloud

  tasks:
    - name: Install required packages
      package:
        name:
          - python3-docker
        state: latest

    - name: Create project directory
      file:
        path: "{{ project_root }}"
        state: directory

    - name: Create nextcloud project file
      copy:
        dest: "{{ project_root }}/docker-compose.yaml"
        content: |
          version: "3"

          services:
            traefik:
              image: traefik
              command: --providers.docker
              restart: always
              ports:
                - 80:80
                - 443:443
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
                - ./acme.json:/acme.json
                - ./traefik.yml:/traefik.yml

            db:
              image: mariadb
              restart: always
              command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
              volumes:
                - db:/var/lib/mysql
              environment:
                - MYSQL_ROOT_PASSWORD=db_secret_root
                - MYSQL_PASSWORD=db_secret
                - MYSQL_DATABASE=nextcloud
                - MYSQL_USER=nextcloud

            app:
              image: nextcloud:fpm
              restart: always
              links:
                - db
              volumes:
                - nextcloud:/var/www/html
                - apps:/var/www/html/apps
                - config:/var/www/html/config
                - data:/var/www/html/data
              environment:
                - MYSQL_PASSWORD=db_secret
                - MYSQL_DATABASE=nextcloud
                - MYSQL_USER=nextcloud
                - MYSQL_HOST=db
                - NEXTCLOUD_ADMIN_USER=admin
                - NEXTCLOUD_ADMIN_PASSWORD=secret
                - NEXTCLOUD_TRUSTED_DOMAINS={{ hostname }}
                - OVERWRITEPROTOCOL=https

            nginx-proxy:
              image: nginxproxy/nginx-proxy:alpine
              volumes:
                - /var/run/docker.sock:/tmp/docker.sock:ro
                - ./nginx.conf:/etc/nginx/nginx.conf:ro
              restart: always
              links:
                - app
              volumes_from:
                - app
              labels:
                - traefik.enable=true
                - traefik.http.routers.nextcloud.rule=Host(`{{ hostname }}`)
                - traefik.http.routers.nextcloud.tls=true
                - traefik.http.routers.nextcloud.tls.certresolver=lets-encrypt

          volumes:
            nextcloud:
            apps:
            config:
            data:
            db:

    - name: Create acme.json if needed
      copy:
        content: ""
        dest: "{{ project_root }}/acme.json"
        force: false
        mode: 0600

    - name: Download nginx.conf
      get_url:
        url: "{{ git_base }}/nginx.conf"
        dest: "{{ project_root }}/nginx.conf"

    - name: Download traefik.yml
      get_url:
        url: "{{ git_base }}/traefik.yml"
        dest: "{{ project_root }}/traefik.yml"

    - name: Create and start services
      docker_compose:
        project_src: "{{ project_root }}"
      register: output

    - name: Check if LDAP App is enabled
      shell: docker exec -it -u 33 nextcloud_app_1 /var/www/html/occ app:list --output=json_pretty | python3 -c 'import json; import sys; l = json.load(sys.stdin); print("user_ldap" in l["enabled"])'
      register: result
    - name: Enable LDAP App
      command: docker exec -it -u 33 nextcloud_app_1 /var/www/html/occ app:enable user_ldap
      when: result.stdout == "False"
